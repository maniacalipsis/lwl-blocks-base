{"version":3,"file":"items-list/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAmC,CAAG;AAKE;AAGN;AAKI;AAEF;AACb;AAAA;AAGhB,SAASe,IAAIA,CAACC,MAAM,EAC3B;EACG,MAAMC,IAAI,GAACT,mDAAmB,CAAC,CAAC;;EAEhC,MAAMW,wBAAwB,GAACf,gEAAa,CAAC,CAAC,CAACgB,GAAG,CAACC,UAAU,KAAG;IAACC,KAAK,EAACD,UAAU,CAACE,IAAI;IAACC,KAAK,EAACH,UAAU,CAACI;EAAK,CAAC,CAAC,CAAC,CAAC,CAAE;;EAEnH,oBACGX,uDAAA,CAAAF,uDAAA;IAAAc,QAAA,gBACGhB,sDAAA,CAACP,sEAAiB;MAAAuB,QAAA,eACfhB,sDAAA,CAACL,wDAAK;QAAAqB,QAAA,eACHhB,sDAAA,CAACJ,4DAAS;UAACmB,KAAK,EAAEzB,mDAAE,CAACQ,8CAAc,GAAC,SAAS,EAACS,IAAI,CAAE;UAAAS,QAAA,eACjDhB,sDAAA,CAACH,gEAAa;YAACiB,KAAK,EAAExB,mDAAE,CAAC,YAAY,EAACiB,IAAI,CAAE;YAACK,KAAK,EAAEN,MAAM,CAACW,UAAU,CAACC,mBAAoB;YAACC,OAAO,EAAEV,wBAAyB;YAACW,QAAQ,EAAGC,OAAO,IAAG;cAACf,MAAM,CAACgB,aAAa,CAAC;gBAACJ,mBAAmB,EAACG;cAAO,CAAC,CAAC;YAAC;UAAE,CAAC;QAAC,CACpM;MAAC,CACR;IAAC,CACQ,CAAC,eACpBrB,sDAAA;MAAA,GAAST,sEAAa,CAAC,CAAC;MAAAyB,QAAA,eACrBhB,sDAAA,CAACR,gEAAW;QAAC+B,aAAa,EAAE,CAACjB,MAAM,CAACW,UAAU,CAACC,mBAAmB,CAAE;QAACM,YAAY,EAAElB,MAAM,CAACW,UAAU,CAACO;MAAa,CAAC;IAAC,CAClH,CAAC;EAAA,CACP,CAAC;AAET;AAEO,SAASC,IAAIA,CAAA,EACpB;EACG,oBACGzB,sDAAA;IAAA,GAAST,kEAAa,CAACkC,IAAI,CAAC,CAAC;IAAAT,QAAA,eAC1BhB,sDAAA,CAACR,gEAAW,CAACkC,OAAO,IAAE;EAAC,CACrB,CAAC;AAEZ;;;;;;;;;;;AChDA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACNsD;;AAEtD;AACiC;AACG;AAEpCC,oEAAiB,CAAC7B,6CAAa,EACb;EACGO,IAAI,EAACA,uCAAI;EACToB,IAAI,EAACA,uCAAIA;AACZ,CAAC,CAAC,C","sources":["webpack://@maniacalipsis/lwl-blocks-base/./src/items-list/edit.js","webpack://@maniacalipsis/lwl-blocks-base/./src/items-list/editor.scss?52c8","webpack://@maniacalipsis/lwl-blocks-base/external window [\"wp\",\"blockEditor\"]","webpack://@maniacalipsis/lwl-blocks-base/external window [\"wp\",\"blocks\"]","webpack://@maniacalipsis/lwl-blocks-base/external window [\"wp\",\"components\"]","webpack://@maniacalipsis/lwl-blocks-base/external window [\"wp\",\"i18n\"]","webpack://@maniacalipsis/lwl-blocks-base/external window \"ReactJSXRuntime\"","webpack://@maniacalipsis/lwl-blocks-base/webpack/bootstrap","webpack://@maniacalipsis/lwl-blocks-base/webpack/runtime/compat get default export","webpack://@maniacalipsis/lwl-blocks-base/webpack/runtime/define property getters","webpack://@maniacalipsis/lwl-blocks-base/webpack/runtime/hasOwnProperty shorthand","webpack://@maniacalipsis/lwl-blocks-base/webpack/runtime/make namespace object","webpack://@maniacalipsis/lwl-blocks-base/./src/items-list/index.js"],"sourcesContent":["import {__} from '@wordpress/i18n';   //Translations module.\nimport {\n          useBlockProps,\n          InnerBlocks,\n          InspectorControls,\n       } from '@wordpress/block-editor';\nimport {\n          getBlockTypes,\n       } from '@wordpress/blocks';\nimport {\n          Panel,\n          PanelBody,\n          SelectControl,\n       } from '@wordpress/components';\n\nimport metadata from './block.json';\nimport './editor.scss';\n\n\nexport function edit(props_)\n{\n   const txtD=metadata.textdomain; //Shorthand for translation text-domain.\n\n   const contentBlocksTypeOptions=getBlockTypes().map(blockType_=>({value:blockType_.name,label:blockType_.title}));  //NOTE: Currently, the purpose of content_blocks_type is to make editing less error prone by preventing a child blocks of the different types to be inserted, rather than to restrict which block types can be inserted.\n\n   return (\n      <>\n         <InspectorControls>\n            <Panel>\n               <PanelBody title={__(metadata.title+' layout',txtD)}>\n                  <SelectControl label={__('Items type',txtD)} value={props_.attributes.content_blocks_type} options={contentBlocksTypeOptions} onChange={(newVal_)=>{props_.setAttributes({content_blocks_type:newVal_});}}/>\n               </PanelBody>\n            </Panel>\n         </InspectorControls>\n         <div {...useBlockProps()}>\n            <InnerBlocks allowedBlocks={[props_.attributes.content_blocks_type]} templateLock={props_.attributes.templateLock}/>\n         </div>\n      </>\n   );\n}\n\nexport function save()\n{\n   return (\n      <div {...useBlockProps.save()}>\n         <InnerBlocks.Content />\n      </div>\n   );\n}\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\n\n//Internal dependencies:\nimport {edit,save} from './edit';\nimport metadata from './block.json';\n\nregisterBlockType(metadata.name,\n                  {\n                     edit:edit,\n                     save:save,\n                  });\n"],"names":["__","useBlockProps","InnerBlocks","InspectorControls","getBlockTypes","Panel","PanelBody","SelectControl","metadata","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","edit","props_","txtD","textdomain","contentBlocksTypeOptions","map","blockType_","value","name","label","title","children","attributes","content_blocks_type","options","onChange","newVal_","setAttributes","allowedBlocks","templateLock","save","Content","registerBlockType"],"sourceRoot":""}